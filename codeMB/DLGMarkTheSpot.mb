'*******************************************************************************
'** 	Created By Peter Horsbøll Møller, Pitney Bowes
'** 	Program:
'** 	Modul:
'**
'*******************************************************************************

'-------------------------------------
Include "MapBasic.def"
Include "Enums.def"
Include "Icons.def"
Include "Menu.def"
'**default constants...
Include "Library\Defaults.def"

'-------------------------------------
Include "Library\DEBUGLib.def"
Include "Library\ERRORLib.def"
Include "Library\RIBBONLib.def"
Include "Library\STRINGLib.def"
Include "Library\SYSTEMLib.def"
Include "Library\TABLELib.def"

Include "DLGMarkTheSpot.def"

Declare Sub DLGMTS_Handler_OnLoad
Declare Sub DLGMTS_Handler_OKClicked
Declare Sub DLGMTS_CopyClicked
Declare Sub DLGMTS_PasteClicked
Declare Sub DLGMTS_CoordSysTypeClicked
Declare Sub DLGMTS_Handler_UseZoomClicked
Declare Sub DLGMTS_Handler_UseMarkerClicked

Declare Function DLGMTSGetXYFromCoordinateString(	  ByVal sCoordinates As String	'The combined coordinate string
										, arrParts() As String			'Will contain the two coordinates
										) As String					'"" if ok, otherwise error string

Define	CTRL_LBL_COORDINATES	100
Define	CTRL_TXT_COORDINATES	110
Define	CTRL_CHK_USE_MARKER		200
Define	CTRL_SYM_MARKER		210
Define	CTRL_CHK_USE_ZOOM		300
Define	CTRL_TXT_ZOOM			310
Define	CTRL_LST_COORDSYS_TYPE	400

Dim	msymMarker As Symbol,
	mnCoordSysType As Integer,
	mbUseMarkerSymbol, mbUseZoom As Logical,
	mfCoordinateX, mfCoordinateY, mfZoom As Float,
	msDistanceUnits As String
'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes
'Parameters:
'	:
'Return value:
'
'**********************************************************************************************''
Function DLGMarkTheSpot() As Logical


OnError GoTo ErrorOccured

DLGMarkTheSpot = FALSE

	Dialog
		Title "Mark the Spot"
		Calling DLGMTS_Handler_OnLoad

		Control StaticText		Position 5,5			ID CTRL_LBL_COORDINATES
			Title "&Enter Coordinate - Lat/Long WGS84"
			Width 220
		Control EditText		Position 5,15			ID CTRL_TXT_COORDINATES
			Width 178
'			Value sCoordinates

		Control CheckBox		Position 5,35			ID CTRL_CHK_USE_MARKER
			Title "Symbol"
			Calling DLGMTS_Handler_UseMarkerClicked
			Value DLGMTSUseMarkerSymbol()
		Control SymbolPicker	Position 5,45			ID CTRL_SYM_MARKER
			Width 20	Height 20
			Value DLGMTSGetMarkerSymbol()

		Control RadioGroup		Position 50,35			ID CTRL_LST_COORDSYS_TYPE
			Title "Lat/Long;Long/Lat;Map Coordsys"
			Value DLGMTSGetLatLongOrder()
			Calling DLGMTS_CoordSysTypeClicked

		Control CheckBox		Position 120,35		ID CTRL_CHK_USE_ZOOM
			Title "Zoom, " & DLGMTSGetDistanceUnits()
			Calling DLGMTS_Handler_UseZoomClicked
			Value DLGMTSUseZoom()
		Control EditText		Position 120,47		ID CTRL_TXT_ZOOM
			Width 50
			Value FormatNumber$(DLGMTSGetZoom())

		Control Button			Position 185,15
			Title "&Copy"
			Calling DLGMTS_CopyClicked
			Width 40	Height 13
		Control Button			Position 185,31
			Title "&Paste"
			Calling DLGMTS_PasteClicked
			Width 40	Height 13

		Control OKButton		Position 185,45
			Title "Show"
			Calling DLGMTS_Handler_OKClicked
			Width 40
		Control CancelButton	Position 185,60
			Title "Close"
			Width 40

	If not CommandInfo(CMD_INFO_DLG_OK) Then
		Exit Function
	End If

DLGMarkTheSpot = TRUE

	Exit Function
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DLGMarkTheSpot")
	Call ERRShow()

End Function

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes
'Parameters:
'
'**********************************************************************************************''
Sub DLGMTS_Handler_OnLoad

OnError GoTo ErrorOccured

	Call DLGMTS_CoordSysTypeClicked
	Call DLGMTS_Handler_UseZoomClicked
	Call DLGMTS_Handler_UseMarkerClicked
	Alter Control CTRL_TXT_COORDINATES Active
	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DLGMTS_Handler_OnLoad")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Precisely
'Parameters:
'
'**********************************************************************************************''
Sub DLGMTS_CopyClicked

Dim	sError, sCoordinates, arrParts() As String

OnError GoTo ErrorOccured

	sCoordinates	= ReadControlValue(CTRL_TXT_COORDINATES)
	If sCoordinates = "" Then
		Exit Sub
	End If

	sCoordinates	= STRINGTrim(sCoordinates)
	sError = DLGMTSGetXYFromCoordinateString(sCoordinates, arrParts)
	If sError <> "" Then
		Note sError
		Exit Sub
	End If

	Call SYSCopyTextToClipboard(DeformatNumber$(arrParts(1)) & " " & DeformatNumber$(arrParts(2)))
	Call RBNNotificationShow("Mark the Spot", "Unformated Coordinates copied to clipboad: ( " & DeformatNumber$(arrParts(1)) & " | " & DeformatNumber$(arrParts(2)) &" )" , Notify_Info, 5000)

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DLGMTS_CopyClicked")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Precisely
'Parameters:
'
'**********************************************************************************************''
Sub DLGMTS_PasteClicked

Dim	sError, sCoordinates, arrParts() As String

OnError GoTo ErrorOccured

	sCoordinates	= SYSGetTextFromClipboard()
	If sCoordinates = "" Then
		Exit Sub
	End If

	sCoordinates	= STRINGTrim(sCoordinates)
	sError = DLGMTSGetXYFromCoordinateString(sCoordinates, arrParts)
	If sError <> "" Then
		Note sError
		Exit Sub
	End If

	arrParts(1)	= STRINGReplace(arrParts(1), ",", ".")
	arrParts(2)	= STRINGReplace(arrParts(2), ",", ".")
'	Print "DLGMTS_PasteClicked:" & arrParts(1) & " " & arrParts(2)
	Alter Control CTRL_TXT_COORDINATES Value Format$(arrParts(1), ",#.000000") & " " & Format$(arrParts(2), ",#.000000")

	Call RBNNotificationShow("Mark the Spot", "Coordinates pasted from clipboad: " & sCoordinates  , Notify_Info, 5000)

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DLGMTS_PasteClicked")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Precisely
'Parameters:
'
'**********************************************************************************************''
Sub DLGMTS_CoordSysTypeClicked

Dim	fFirst, fSecond As Float,
	nMID As Integer

OnError GoTo ErrorOccured

	nMID	= FrontWindow()
	Do Case ReadControlValue(CTRL_LST_COORDSYS_TYPE)
		Case COORD_ORDER_LATLONG
			Alter Control CTRL_LBL_COORDINATES	Title "Enter Coordinate - Latitude/Longitude WGS84"
			Set CoordSys Earth Projection 1, 104
			fFirst 	= MapperInfo(nMID, MAPPER_INFO_CENTERY)
			fSecond	= MapperInfo(nMID, MAPPER_INFO_CENTERX)
		Case COORD_ORDER_LONGLAT
			Alter Control CTRL_LBL_COORDINATES	Title "Enter Coordinate - Longitude/Latitude WGS84"
			Set CoordSys Earth Projection 1, 104
			fFirst 	= MapperInfo(nMID, MAPPER_INFO_CENTERX)
			fSecond	= MapperInfo(nMID, MAPPER_INFO_CENTERY)
		Case Else
			Alter Control CTRL_LBL_COORDINATES	Title "Enter Coordinate - " & MapperInfo(nMID, MAPPER_INFO_COORDSYS_NAME)
			Set CoordSys Window nMID
			fFirst 	= MapperInfo(nMID, MAPPER_INFO_CENTERX)
			fSecond	= MapperInfo(nMID, MAPPER_INFO_CENTERY)
	End Case

	Alter Control CTRL_TXT_COORDINATES	Value Format$(fFirst, ",#.000000") & " " & Format$(fSecond, ",#.000000")

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DLGMTS_CoordSysTypeClicked")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes
'Parameters:
'
'**********************************************************************************************''
Sub DLGMTS_Handler_UseZoomClicked

OnError GoTo ErrorOccured

	If ReadControlValue(CTRL_CHK_USE_ZOOM) Then
		Alter Control CTRL_TXT_ZOOM Enable
	Else
		Alter Control CTRL_TXT_ZOOM Disable
	End If

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DLGMTS_Handler_UseZoomClicked")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes
'Parameters:
'
'**********************************************************************************************''
Sub DLGMTS_Handler_UseMarkerClicked

OnError GoTo ErrorOccured

	If ReadControlValue(CTRL_CHK_USE_MARKER) Then
		Alter Control CTRL_SYM_MARKER Enable
	Else
		Alter Control CTRL_SYM_MARKER Disable
	End If

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DLGMTS_Handler_UseMarkerClicked")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes
'Parameters:
'
'**********************************************************************************************''
Sub DLGMTS_Handler_OKClicked

Dim	sZoom, sCoordinates, sError, arrParts() As String

OnError GoTo ErrorOccured

	sCoordinates		= ReadControlValue(CTRL_TXT_COORDINATES)
	If sCoordinates = "" Then
		Note "Please enter a coordinate pair into the coordinate field"
		Dialog Preserve
		Exit Sub
	End If

	sCoordinates	= STRINGTrim(sCoordinates)
	sError = DLGMTSGetXYFromCoordinateString(sCoordinates, arrParts)
	If sError <> "" Then
		Note sError
		Dialog Preserve
		Exit Sub
	End If

	mnCoordSysType		= ReadControlValue(CTRL_LST_COORDSYS_TYPE)

	If mnCoordSysType = COORD_ORDER_LATLONG Then
		mfCoordinateX = Val(DeformatNumber$(arrParts(2)))
		mfCoordinateY = Val(DeformatNumber$(arrParts(1)))
	Else
		mfCoordinateX = Val(DeformatNumber$(arrParts(1)))
		mfCoordinateY = Val(DeformatNumber$(arrParts(2)))
	End If

	mbUseZoom = ReadControlValue(CTRL_CHK_USE_ZOOM)

	If mbUseZoom Then
		sZoom			= ReadControlValue(CTRL_TXT_ZOOM)
		If sZoom = "" Then
			Note "Please enter a zoom larger than 0 into the zoom field"
			Dialog Preserve
			Exit Sub
		End If
		If Val(DeformatNumber$(sZoom)) <= 0 Then
			Note "Please enter a zoom larger than 0 into the zoom field"
			Dialog Preserve
			Exit Sub
		End If
		Call DLGMTSSetZoom(Val(DeformatNumber$(sZoom)))
	End If

	mbUseMarkerSymbol	= ReadControlValue(CTRL_CHK_USE_MARKER)
	msymMarker 		= ReadControlValue(CTRL_SYM_MARKER)

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DLGMTS_Handler_OKClicked")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Precisely
'Parameters:
'	:
'Return value:
'
'**********************************************************************************************''
Function DLGMTSGetXYFromCoordinateString( ByVal sCoordinates As String	'The combined coordinate string
								, arrParts() As String			'Will contain the two coordinates
'								, ByVal bIncludeComma As Separator	'Allow comma as a possible separator between the two coordinates
								) As String					'"" if ok, otherwise error string

Dim	arrSeparators() As String,
	i, nSeparator, nNumParts As Integer

OnError GoTo ErrorOccured

DLGMTSGetXYFromCoordinateString = ""

	i = i + 1
	Redim arrSeparators(i)
	arrSeparators(i) = " "
	i = i + 1
	Redim arrSeparators(i)
	arrSeparators(i) = ";"
	i = i + 1
	Redim arrSeparators(i)
	arrSeparators(i) = "|"
	i = i + 1
	Redim arrSeparators(i)
	arrSeparators(i) = Chr$(9)
	i = i + 1
	Redim arrSeparators(i)
	arrSeparators(i) = ","

	For i = 1 To Ubound(arrSeparators)
		If InStr(1, sCoordinates, arrSeparators(i)) > 0 Then
			nSeparator = i
			Exit For
		End If
	Next

	If nSeparator = 0 Then
		DLGMTSGetXYFromCoordinateString	= "Please separate the coordinates with one of these separators: ''Space', ';', '|' or 'TAB'"
		Exit Function
	End If
	nNumParts = STRINGSplit(sCoordinates, arrSeparators(nSeparator), arrParts())

	If nNumParts < 2 Then
		DLGMTSGetXYFromCoordinateString	= "Please separate the coordinates with one of these separators: ''Space', ';', '|' or 'TAB'"
		Exit Function
	End If
	If arrParts(1) = "" Then
		DLGMTSGetXYFromCoordinateString	= "No first coordinate element found in string: '" & sCoordinates & "'"
		Exit Function
	End If
	If arrParts(2) = "" Then
		DLGMTSGetXYFromCoordinateString	= "No second coordinate element found in string: '" & sCoordinates & "'"
		Exit Function
	End If

	If nNumParts = 4 Then
		arrParts(1) = arrParts(1) & "." & arrParts(2)
		arrParts(2) = arrParts(3) & "." & arrParts(4)
		Redim arrParts(2)
'		Print "A1:" & arrParts(1)
'		Print "A2:" & arrParts(2)
		arrParts(1) = IIf(Right$(arrParts(1), 1) = ",", Left$(arrParts(1), Len(arrParts(1) - 1)), arrParts(1))
		arrParts(2) = IIf(Right$(arrParts(2), 1) = ",", Left$(arrParts(2), Len(arrParts(2) - 1)), arrParts(2))
'		Print "B1:" & arrParts(1)
'		Print "B2:" & arrParts(2)
	End If

	Exit Function
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DLGMTSGetXYFromCoordinateString")
	Call ERRShow()

End Function

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes
'Parameters:
'	:
'Return value:
'
'**********************************************************************************************''
Function DLGMTSGetCoordinateX() As Float

OnError GoTo ErrorOccured

DLGMTSGetCoordinateX = mfCoordinateX

	Exit Function
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DLGMTSGetCoordinateX")
	Call ERRShow()

End Function
'**********************************************************************************************''
Function DLGMTSGetCoordinateY() As Float

OnError GoTo ErrorOccured

DLGMTSGetCoordinateY = mfCoordinateY

	Exit Function
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DLGMTSGetCoordinateY")
	Call ERRShow()

End Function

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes
'Parameters:
'	:
'Return value:
'
'**********************************************************************************************''
Function DLGMTSGetZoom() As Float

OnError GoTo ErrorOccured

DLGMTSGetZoom = mfZoom

	Exit Function
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DLGMTSGetZoom")
	Call ERRShow()

End Function

'**********************************************************************************************''
Sub DLGMTSSetZoom(ByVal fValue As Float)

OnError GoTo ErrorOccured

	mfZoom = fValue
	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DLGMTSSetZoom")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes
'Parameters:
'	:
'Return value:
'
'**********************************************************************************************''
Sub DLGMTSSetUseZoom(ByVal bValue As Logical)

OnError GoTo ErrorOccured

	mbUseZoom = bValue
	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DLGMTSSetUseZoom")

End Sub
'**********************************************************************************************''
Function DLGMTSUseZoom() As Logical

OnError GoTo ErrorOccured

	DLGMTSUseZoom = mbUseZoom
	Exit Function
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DLGMTSUseZoom")

End Function

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes
'Parameters:
'	:
'Return value:
'
'**********************************************************************************************''
Function DLGMTSGetDistanceUnits() As String

OnError GoTo ErrorOccured

	DLGMTSGetDistanceUnits = msDistanceUnits
	Exit Function
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DLGMTSGetDistanceUnits")
	Call ERRShow()

End Function

'**********************************************************************************************''
Sub DLGMTSSetDistanceUnits(ByVal sValue As String)

OnError GoTo ErrorOccured

	msDistanceUnits = sValue
	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DLGMTSSetDistanceUnits")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes
'Parameters:
'	:
'Return value:
'
'**********************************************************************************************''
Function DLGMTSUseMarkerSymbol() As Logical

OnError GoTo ErrorOccured

	DLGMTSUseMarkerSymbol = mbUseMarkerSymbol
	Exit Function
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DLGMTSUseMarkerSymbol")
	Call ERRShow()

End Function

'**********************************************************************************************''
Sub DLGMTSSetUseMarkerSymbol(ByVal bValue As Logical)

OnError GoTo ErrorOccured

	mbUseMarkerSymbol = bValue
	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DLGMTSSetUseMarkerSymbol")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes
'Parameters:
'	:
'Return value:
'
'**********************************************************************************************''
Function DLGMTSGetMarkerSymbol() As Symbol

OnError GoTo ErrorOccured

	DLGMTSGetMarkerSymbol = msymMarker

	Exit Function
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DLGMTSGetMarkerSymbol")
	Call ERRShow()

End Function

'**********************************************************************************************''
Sub DLGMTSSetMarkerSymbol(ByVal symValue As Symbol)

OnError GoTo ErrorOccured

	msymMarker = symValue

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DLGMTSSetMarkerSymbol")
	Call ERRShow()

End Sub

'**********************************************************************************************''
' Property
'**********************************************************************************************''
Sub DLGMTSSetLatLongOrder(ByVal nValue As Integer)

OnError GoTo ErrorOccured

	mnCoordSysType = nValue
	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DLGMTSSetLatLongOrder")

End Sub
'**********************************************************************************************''
Function DLGMTSGetLatLongOrder() As Integer

OnError GoTo ErrorOccured

	If mnCoordSysType = 0 Then
		mnCoordSysType = COORD_ORDER_LATLONG
	End If
	DLGMTSGetLatLongOrder = mnCoordSysType
	Exit Function
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DLGMTSGetLatLongOrder")

End Function
